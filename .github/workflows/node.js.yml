# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test:
    name: Build and Run Gondola tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        #node-version: [10.x, 12.x, 14.x]
        node-version: [14.x]
        browser: [chrome, firefox]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Build souce code & compile test project
      run: docker-compose run --rm gondola.builder
      working-directory: tests
    
    - name: Run all tests
      run: docker-compose run --rm gondola.tester
      working-directory: tests
      env:
        BROWSER: ${{ matrix.browser }}
        G_LS_TOKEN: ${{ secrets.G_LS_TOKEN }} 
    
    - name: Upload Gondola Test Results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Gondola Test Results (Browser - ${{ matrix.browser }}, Node - ${{ matrix.node-version }})
        path: tests/results/*
    
  publish-test-results:
    name: "Publish Gondola xUnit Tests Results"
    needs: build-and-test
    runs-on: ubuntu-latest
    # the build-and-test job might be skipped, we don't need to run this job then
    if: success() || failure()

    steps:
    - name: Download all result artifacts
      uses: actions/download-artifact@v2
    
    - name: Publish Gondola xUnit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1.4
      #if: always()
      with:
        check_name: Gondola xUnit Test Results
        files: Gondola*/*.xml
        report_individual_runs: true
        github_token: ${{ secrets.GITHUB_TOKEN }}
        deduplicate_classes_by_file_name: true
